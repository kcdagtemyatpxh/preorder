// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sample.Infrastructure.Persistences;

#nullable disable

namespace Sample.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220727083343_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sample.Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("AvatarLink")
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("PermissionGroupId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdatorId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevel");

                    b.HasIndex("Code");

                    b.HasIndex("CreateDateTime");

                    b.HasIndex("CreatorId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name");

                    b.HasIndex("PermissionGroupId");

                    b.HasIndex("UpdateDateTime");

                    b.HasIndex("UpdatorId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Sample.Domain.Entities.AccountAuth", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("HashPasswordKey")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("HashedPassword")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdatorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Code");

                    b.HasIndex("CreateDateTime");

                    b.HasIndex("CreatorId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UpdateDateTime");

                    b.HasIndex("UpdatorId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AccountAuth");
                });

            modelBuilder.Entity("Sample.Domain.Entities.AccountSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ExpiryDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdatorId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Code");

                    b.HasIndex("CreateDateTime");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ExpiryDatetime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UpdateDateTime");

                    b.HasIndex("UpdatorId");

                    b.ToTable("AccountSession");
                });

            modelBuilder.Entity("Sample.Domain.Entities.Permission", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Code");

                    b.HasIndex("CategoryName");

                    b.HasIndex("Code");

                    b.HasIndex("Name");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Sample.Domain.Entities.PermissionGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<int>("HierarchyLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdatorId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("CreateDateTime");

                    b.HasIndex("CreatorId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.HasIndex("UpdateDateTime");

                    b.HasIndex("UpdatorId");

                    b.ToTable("PermissionGroup");
                });

            modelBuilder.Entity("Sample.Domain.Entities.PermissionValue", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("ActualValue")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Code", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("PermissionValue");
                });

            modelBuilder.Entity("Sample.Domain.Entities.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdatorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("CreateDateTime");

                    b.HasIndex("CreatorId");

                    b.HasIndex("Description");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UpdateDateTime");

                    b.HasIndex("UpdatorId");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("Sample.Domain.Entities.Account", b =>
                {
                    b.HasOne("Sample.Domain.Entities.PermissionGroup", "PermissionGroup")
                        .WithMany("Accounts")
                        .HasForeignKey("PermissionGroupId");

                    b.Navigation("PermissionGroup");
                });

            modelBuilder.Entity("Sample.Domain.Entities.AccountAuth", b =>
                {
                    b.HasOne("Sample.Domain.Entities.Account", "Account")
                        .WithMany("Auths")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Sample.Domain.Entities.AccountSession", b =>
                {
                    b.HasOne("Sample.Domain.Entities.Account", "Account")
                        .WithMany("Sessions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Sample.Domain.Entities.PermissionGroup", b =>
                {
                    b.HasOne("Sample.Domain.Entities.PermissionGroup", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Sample.Domain.Entities.PermissionValue", b =>
                {
                    b.HasOne("Sample.Domain.Entities.Permission", "Permission")
                        .WithMany("PermissionValues")
                        .HasForeignKey("Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sample.Domain.Entities.PermissionGroup", "PermissionGroup")
                        .WithMany("PermissionValues")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("PermissionGroup");
                });

            modelBuilder.Entity("Sample.Domain.Entities.Account", b =>
                {
                    b.Navigation("Auths");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Sample.Domain.Entities.Permission", b =>
                {
                    b.Navigation("PermissionValues");
                });

            modelBuilder.Entity("Sample.Domain.Entities.PermissionGroup", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Childs");

                    b.Navigation("PermissionValues");
                });
#pragma warning restore 612, 618
        }
    }
}
